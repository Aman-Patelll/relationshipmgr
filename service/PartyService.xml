<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">
    <service verb="create" noun="Party">
        <in-parameters>
            <parameter name="partyId" />
            <parameter name="partyTypeEnumId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="partyId" />
        </out-parameters>
        <actions>
            <if condition="!partyId">
                <return error="true" message="Party Id is required." />
            </if>
            <if condition="!partyTypeEnumId">
                <return error="true" message="partyTypeEnumId is required." />
            </if>

            <service-call name="create#relationshipmgr.Party" in-map="context" out-map="context" />

            <return type="success" message="Party Created SuccessFully" />
        </actions>
    </service>

    <service verb="find" noun="Party">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="party" />
        </out-parameters>
        <actions>
            <entity-find-one entity-name="Party" value-field="party" />
            <if condition="!party">
                <return error="true" message="Party Id is incorrect" />
            </if>

            <return type="success" message="Party Fetch Successfully" />
        </actions>
    </service>

    <service verb="store" noun="Party" >
        <in-parameters>
            <parameter name="partyId" required="true"/>
            <parameter name="partyTypeEnumId"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="Party" value-field="party" />
            <if condition="!party">
                <return error="true" message="Id is incorrect" />
            </if>
            <entity-set value-field="party" />
            <entity-update value-field="party"/>

            <return type="success" message="Party Updated Successfully" />
        </actions>
    </service>

    <service verb="delete" noun="Party">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="Party" value-field="party" />
            <if condition="!party">
                <return error="true" message="Id is incorrect" />
            </if>

            <entity-delete value-field="party"/>

            <return type="success" message="Party Deleted Successfully" />
        </actions>
    </service>

    <service verb="create" noun="Person">
        <in-parameters>
            <auto-parameters entity-name="Person" include="all"/>
        </in-parameters>
        <out-parameters>
            <parameter name="partyId" />
        </out-parameters>
        <actions>
            <if condition="!partyId">
                <return error="true" message="Party Id is required." />
            </if>
            <if condition="!firstName">
                <return error="true" message="firstName is required." />
            </if>
            <if condition="!lastName">
                <return error="true" message="lastName is required" />
            </if>
            <if condition="!birthDate">
                <return error="true" message="lastName is required" />
            </if>

            <service-call name="create#relationshipmgr.Person" in-map="context" out-map="context" />

            <return type="success" message="Person Created SuccessFully" />
        </actions>
    </service>

    <service verb="find" noun="Person">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="person" />
        </out-parameters>
        <actions>
            <entity-find-one entity-name="Person" value-field="person" />
            <if condition="!person">
                <return error="true" message="Id is incorrect" />
            </if>

            <return type="success" message="Person Fetch Successfully" />
        </actions>
    </service>

    <service verb="store" noun="Person" >
        <in-parameters>
            <auto-parameters entity-name="Person" include="all" />
        </in-parameters>
        <actions>
            <entity-find-one entity-name="Person" value-field="person" />
            <if condition="!person">
                <return error="true" message="Id is incorrect" />
            </if>
            <entity-set value-field="person" />
            <entity-update value-field="person"/>

            <return type="success" message="Person Updated Successfully" />
        </actions>
    </service>

    <service verb="delete" noun="Person">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="Person" value-field="person" />
            <if condition="!person">
                <return error="true" message="Id is incorrect" />
            </if>

            <entity-delete value-field="person"/>

            <return type="success" message="Person Deleted Successfully" />
        </actions>
    </service>

    <service verb="create" noun="Organization">
        <in-parameters>
            <auto-parameters entity-name="Organization" include="all"/>
        </in-parameters>
        <out-parameters>
            <parameter name="partyId" />
        </out-parameters>
        <actions>
            <if condition="!partyId">
                <return error="true" message="Party Id is required." />
            </if>
            <if condition="!organizationName">
                <return error="true" message="organizationName is required." />
            </if>

            <service-call name="create#relationshipmgr.Organization" in-map="context" out-map="context" />

            <return type="success" message="Organization Created SuccessFully" />
        </actions>
    </service>

    <service verb="find" noun="Organization">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="organization" />
        </out-parameters>
        <actions>
            <entity-find-one entity-name="Organization" value-field="organization" />
            <if condition="!organization">
                <return error="true" message="Id is incorrect" />
            </if>

            <return type="success" message="Organization Fetch Successfully" />
        </actions>
    </service>

    <service verb="store" noun="Organization" >
        <in-parameters>
            <auto-parameters entity-name="Organization" include="all" />
        </in-parameters>
        <actions>
            <entity-find-one entity-name="Organization" value-field="organization" />
            <if condition="!organization">
                <return error="true" message="Id is incorrect" />
            </if>
            <entity-set value-field="organization" />
            <entity-update value-field="organization"/>

            <return type="success" message="Organization Updated Successfully" />
        </actions>
    </service>

    <service verb="delete" noun="Organization">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="Organization" value-field="organization" />
            <if condition="!organization">
                <return error="true" message="Id is incorrect" />
            </if>

            <entity-delete value-field="organization"/>

            <return type="success" message="Organization Deleted Successfully" />
        </actions>
    </service>

    <service verb="create" noun="PartyRole">
        <in-parameters>
            <parameter name="partyId" />
            <parameter name="roleTypeId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="partyId" />
        </out-parameters>
        <actions>
            <if condition="!partyId">
                <return error="true" message="Party Id is required." />
            </if>
            <if condition="!roleTypeId">
                <return error="true" message="roleTypeId is required." />
            </if>

            <service-call name="create#relationshipmgr.PartyRole" in-map="context" out-map="context" />

            <return type="success" message="PartyRole Created SuccessFully" />
        </actions>
    </service>

    <service verb="find" noun="PartyRole">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="partyRole" />
        </out-parameters>
        <actions>
            <entity-find-one entity-name="PartyRole" value-field="partyRole" />
            <if condition="!partyRole">
                <return error="true" message="Party Id is incorrect" />
            </if>

            <return type="success" message="PartyRole Fetch Successfully" />
        </actions>
    </service>

    <service verb="store" noun="PartyRole" >
        <in-parameters>
            <auto-parameters entity-name="PartyRole" include="all" />
        </in-parameters>
        <actions>
            <entity-find-one entity-name="PartyRole" value-field="partyRole" />
            <if condition="!partyRole">
                <return error="true" message="Id is incorrect" />
            </if>
            <entity-set value-field="partyRole" />
            <entity-update value-field="partyRole"/>

            <return type="success" message="PartyRole Updated Successfully" />
        </actions>
    </service>

    <service verb="delete" noun="PartyRole">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="PartyRole" value-field="partyRole" />
            <if condition="!partyRole">
                <return error="true" message="Id is incorrect" />
            </if>

            <entity-delete value-field="partyRole"/>

            <return type="success" message="PartyRole Deleted Successfully" />
        </actions>
    </service>
</services>